{% set service_name='' %}
{% set service_env='' %}
{% set dns_name=service_name+'-'+service_env %}
---
name: {{ service_name }}-{{ service_env }}-rds
---
AWSTemplateFormatVersion: '2010-09-09'
Description: {{ service_name }} RDS Instance for {{ service_env }} in {{ env }} environment
Resources:
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 5
      AllowMajorVersionUpgrade: "false"
      AutoMinorVersionUpgrade: "true"
      BackupRetentionPeriod: 10
      DBName: {{ service_name }}{{ service_env }}
      DBInstanceClass: db.m3.medium
      DBInstanceIdentifier: {{ service_name }}-{{ service_env }}
      PubliclyAccessible: false
      StorageEncrypted: true
      MasterUsername: root
      MasterUserPassword: {{ rds_root_password }}
      MultiAZ: true
      Engine: postgres
      EngineVersion: "9.5.2"
      DBSubnetGroupName: { Ref: DBSubnetGroup }
      VPCSecurityGroups:
      - { Ref: DBSG }
      Tags:
        - Key: Name
          Value: {{ service_name }}-{{ service_env }}-rds
        - Key: Env
          Value: {{ env }}
        - Key: Service
          Value: {{ service_name }}-{{ service_env }}-rds
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: {{ service_name }} RDS DB Subnet Group for {{ service_env }}
      SubnetIds:
      {% for subnet in compute_subnets %}
        - {{ get_stack_output(cf_conn, env + '-infra', 'ComputeSubnet' + loop.index0|string) }}
      {%- endfor %}
  DBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: {{ service_name }} RDS DB SG for {{ service_env }}
      VpcId: {{ get_vpc_id(vpc_conn, vpc_name) }}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        SourceSecurityGroupId: {{ get_stack_output(cf_conn, env + '-infra', 'ComputeDefaultSG') }}
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: {{ vpn_cidrip }}
  DBDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: {{ dns_zone_name }}.
      RecordSets:
      - Name: {{ dns_name }}{% if env != 'prod' %}-{{ service_env }}{% endif %}.{{ dns_zone_name }}
        Type: CNAME
        TTL: '120'
        ResourceRecords:
        - 'Fn::GetAtt':
          - DB
          - Endpoint.Address
