---
AWSTemplateFormatVersion: '2010-09-09'
Description: OpenVPN ELB
Outputs:
  ELBSG:
    Value: {Ref: ELBSG}
  ELB:
    Value: {Ref: ELB}
Resources:
  ELBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: VPN ELB SG
      VpcId: {{ get_vpc_id(vpc_conn, vpc_name) }}
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 1194
          ToPort: 1194
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 1194
          ToPort: 1194
          DestinationSecurityGroupId: {{ get_stack_output(cf_conn, vpn_stack_name, 'VPNDefaultSG') }}

  DefaultSGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {{ get_stack_output(cf_conn, vpn_stack_name, 'VPNDefaultSG') }}
      IpProtocol: tcp
      SourceSecurityGroupId: {Ref: ELBSG}
      FromPort: 1194
      ToPort: 1194

  ELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: true
      Subnets:
        - {{ get_stack_output(cf_conn, vpn_stack_name, 'VPNSubnet0') }}
        - {{ get_stack_output(cf_conn, vpn_stack_name, 'VPNSubnet1') }}
        - {{ get_stack_output(cf_conn, vpn_stack_name, 'VPNSubnet2') }}
      SecurityGroups:
        - {Ref: ELBSG}
      HealthCheck:
        Target: 'TCP:1194'
        HealthyThreshold: 2
        Interval: 10
        Timeout: 5
        UnhealthyThreshold: 2
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 30
      Listeners:
      - LoadBalancerPort: 1194
        Protocol: TCP
        InstancePort: 1194
        InstanceProtocol: TCP
      - LoadBalancerPort: 80
        Protocol: TCP
        InstancePort: 1194
        InstanceProtocol: TCP
      Tags:
      - Key: Name
        Value: vpn
      - Key: Env
        Value: {{ env }}
      - Key: Service
        Value: vpn

  ELBDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: {{ dns_zone_name }}.
      RecordSets:
        - Name: vpn{% if env != 'prod' %}-{{ env }}{% endif %}.{{ dns_zone_name }}
          Type: A
          AliasTarget:
            HostedZoneId:
              'Fn::GetAtt':
                - ELB
                - CanonicalHostedZoneNameID
            DNSName:
              'Fn::GetAtt':
                - ELB
                - CanonicalHostedZoneName
