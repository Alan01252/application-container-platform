---
AWSTemplateFormatVersion: '2010-09-09'
Description: API Catalogue Sonar RDS stack in {{ env }} environment
Resources:
  DB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 10
      AllowMajorVersionUpgrade: "false"
      AutoMinorVersionUpgrade: "true"
      DBInstanceClass: db.t2.medium
      StorageType: gp2
      MasterUsername: root
      MasterUserPassword: changeme
      Engine: mysql
      EngineVersion: "5.6.23"
      DBSubnetGroupName: { Ref: DBSubnetGroup }
      VPCSecurityGroups:
      - { Ref: DBSG }
      Tags:
        - Key: Name
          Value: {{ env }}-api-catalogue-sonar-rds
        - Key: Env
          Value: {{ env }}

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "API Catalogue Sonar RDS DB Subnet Group"
      SubnetIds:
        - {{ get_stack_output(cf_conn, infra_stack_name, 'ComputeSubnet0') }}
        - {{ get_stack_output(cf_conn, infra_stack_name, 'ComputeSubnet1') }}
        - {{ get_stack_output(cf_conn, infra_stack_name, 'ComputeSubnet2') }}

  DBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: API Catalogue Sonar RDS DB SG
      VpcId: {{ get_vpc_id(vpc_conn, vpc_name) }}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: {{ get_stack_output(cf_conn, infra_stack_name, 'ComputeDefaultSG') }}

  DBDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: {{ dns_zone_name }}.
      RecordSets:
      - Name: api-catalogue-sonar-rds{% if env != 'prod' %}-{{ env }}{% endif %}.{{ dns_zone_name }}
        Type: CNAME
        TTL: 60
        ResourceRecords:
        - 'Fn::GetAtt':
          - DB
          - Endpoint.Address

